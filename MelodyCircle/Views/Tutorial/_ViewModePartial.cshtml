@using MelodyCircle.ExtensionMethods
@using Microsoft.AspNetCore.Identity
@using MelodyCircle.Data
@model IEnumerable<Tutorial>
@inject UserManager<User> UserManager
@inject ApplicationDbContext Context

@* Eduardo Andrade, Rodrigo Nogueira, Guilherme Bernardino *@

@foreach (var item in Model)
{
    <div class="card col-lg-3 m-4 rounded border border-purple" style="width: 300px;" data-tutorial-id="@item.Id">
        <img class="card-img-top mt-3" style="width: 100%; height: 200px;" src="data:@($"image/{item.PhotoContentType};base64,{Convert.ToBase64String(item.Photo)}")" />
        <div class="card-body align-content-center text-center">
            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>

            <div>
                <span class="card-title">@Html.Translate("LB_NUMBEROFSTEPS"): </span>
                <span>@item.StepCount</span>
            </div>

            <div>
                <span class="card-title">@Html.Translate("LB_NUMBEROFSUBSCRIBED"): </span>
                <span>@item.SubscribersCount</span>
            </div>


            <a asp-action="Index" asp-controller="Step" asp-route-tutorialId="@item.Id" class="btn bg-purple text-white mt-2">@Html.Translate("LB_OPEN")</a><br />

            @{
                double averageRating = Context.TutorialRating
                .Where(u => u.TutorialId.Equals(item.Id))
                .ToList()
                .CalculateAverageRating();

                int roundedRating = (int)Math.Round(averageRating, MidpointRounding.AwayFromZero);
                int fullStars = roundedRating / 2;
                int halfStar = roundedRating % 2;
                int emptyStars = 5 - fullStars - halfStar;
            }
            <div class="star-rating mt-3">
                @for (int i = 0; i < fullStars; i++)
                {
                    <img src="~/img/star-filled-svgrepo-com.svg" />
                }
                @if (halfStar > 0)
                {
                    <img src="~/img/star-half-svgrepo-com.svg" />
                    fullStars++;
                }
                @for (int i = fullStars; i < 5; i++)
                {
                    <img src="~/img/estrelaEmpty.svg" />
                }
            </div>

            <button type="button" class="border-purple bg-purple rounded mt-3" data-bs-toggle="modal" data-bs-target="#addStarRatingModal">
                <img src="~/img/star-add-filled-svgrepo-com.svg" />
            </button>

            <div class="modal fade" id="addStarRatingModal" tabindex="-1" aria-labelledby="addStarRatingModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addStarRatingModalLabel">@Html.Translate("LB_010")</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="starRatingForm" asp-action="RateTutorial" asp-route-id="@item.Id" method="post">
                                <div class="star-rating">
                                    @for (int i = 1; i <= 10; i++)
                                    {
                                        <img class="star" src="~/img/estrelaEmpty.svg" data-value="@i" />
                                    }
                                </div>
                                <input type="hidden" name="rating" id="starRating" value="0" />
                                <button type="submit" class="btn bg-purple text-white border-darkPurple rounded">@Html.Translate("LB_GIVESTARS")</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}