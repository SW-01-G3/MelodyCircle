@using Microsoft.AspNetCore.Identity
@using MelodyCircle.Data;
@using MelodyCircle.ExtensionMethods
@using Microsoft.IdentityModel.Tokens

@model List<Notification>
@inject ApplicationDbContext Context

@section head {
    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.0-rc.2/dist/quill.snow.css" rel="stylesheet" />
}

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/quill@2.0.0-rc.2/dist/quill.js"></script>
    <script>
        function convertToHtml(editor, contents) {
            editor.setContents(contents);
            return editor.root.innerHTML;
        }

        const quill = new Quill('#editor');
        let descriptionData = [];
        let descriptionDivs = document.getElementsByName("commentContent");

        contentDiv.innerHTML = convertToHtml(quill, contentData);

        @if (Model != null || Model.Count > 0)
        {
            @foreach (var notification in Model)
            {
                @if (notification.Status == NotificationStatus.Pending) {
                    @:descriptionData.push(@Html.Raw(notification.CollaborationDescription));
                }
            }
        }

        for (let cnt = 0; cnt < descriptionData.length; cnt++) {
            descriptionDivs[cnt].innerHTML = convertToHtml(quill, descriptionData[cnt]);
        }
    </script>
}

<input type="hidden" id="editor" />

<h1 class="text-center">@Html.Translate("LB_NOTIFS")</h1>

<div class="container d-flex justify-content-center">

        @if (!Model.IsNullOrEmpty() || Model.Count > 0)
        {
            @foreach (var notification in Model)
            {
       
                @if (notification.Status == NotificationStatus.Pending)
                {
                    <div class="text-center border-purple bg-white p-4 mx-auto mb-4 w-25 justify-content-center align-items-center">
                        <h3>@Html.Translate("LB_INVITECOLLAB")</h3>
                        <p><strong>@notification.CollaborationTitle</strong></p>
                        <div name="collaborationDescription"></div>

                        @{
                            var username = Context.Users.Where(s => s.Id.ToString() == notification.SenderId).FirstOrDefault().UserName;
                        }

                        <p>@Html.Translate("LB_THEUSER") <strong>@username</strong> @Html.Translate("LB_ISINVITING")</p>
                        <form asp-action="AcceptInvite" asp-controller="Notification" method="post">
                            <input type="hidden" name="notificationId" value="@notification.Id" />
                            <button type="submit" class="btn bg-purple text-white">@Html.Translate("LB_ACCEPT")</button>
                        </form>
                        <form asp-action="DeclineInvite" asp-controller="Notification" method="post" class="pt-2">
                            <input type="hidden" name="notificationId" value="@notification.Id" />
                            <button type="submit" class="btn btn-danger">@Html.Translate("LB_DECLINE")</button>
                        </form>
                    </div>
                }
            }
        }
        else
        {
	        <div class="d-flex align-items-center justify-content-center" style="height: 250px;">
				<h3>@Html.Translate("LB_NONOTIFS")</h3>
	        </div>
        }
</div>


<div class="text-end">
    <button type="button" class="btn btn-sm bg-darkPurple text-white rounded-circle floating-button-left" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-html="true"
            title="<p>@Html.Translate("TT_NOTIFS")</p>">
        ?
    </button>
</div>