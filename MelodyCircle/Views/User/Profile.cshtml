@model MelodyCircle.ViewModels.ProfileViewModel
@using MelodyCircle.ExtensionMethods
@using Microsoft.AspNetCore.Identity
@using MelodyCircle.Data
@inject UserManager<User> UserManager
@inject ApplicationDbContext Context

@{
    ViewData["Title"] = "Profile";
}

<h1>Profile</h1>

<div>
    <h4>Profile</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.UserName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.UserName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.ProfilePicture)
        </dt>
        <dd class="col-sm-10">
            @if (Model.User.ProfilePicture != null && Model.User.ProfilePicture.Length > 0)
            {
                <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.User.ProfilePicture))" 
                alt="Profile Picture" class="profile-picture" style="width: 256px; height: 256px;" />
            }

            @if (User.Identity.IsAuthenticated && Model.User.UserName == User.Identity.Name)
            {
                <form asp-action="PutProfilePicture" asp-route-id="@Model.User.UserName" method="post" enctype="multipart/form-data">
  
                    <input type="file" class="form-control-file" id="profilePicture" name="profilePicture" accept="image/jpeg">
                    <button type="submit" class="btn btn-primary">Upload</button>
                </form>
            }
        </dd>
        <dt class="col-sm-2">
            @*     <p />Rating:@Context.UserRating.Where(u => u.UserId.ToString().Equals(Model.User.Id.ToString())).ToList().FirstOrDefault().Value</p> *@
            <p />Rating:@Context.UserRating.Where(u => u.RatedUserName.Equals(Model.User.UserName)).ToList().CalculateAverageRating()</p> 
        </dt>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.BirthDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.BirthDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.Gender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.Locality)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.Locality)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Roles)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Roles)
        </dd>
    </dl>
    @if (User.Identity.IsAuthenticated && Model.User.UserName != User.Identity.Name)
    {
        //Model.Context.Entry(Model.User).Collection(u => u.Connections).Load();
        var currentUser = await UserManager.GetUserAsync(User);
        await Context.Entry(currentUser).Collection(u => u.Connections).LoadAsync();
        var isConnected = currentUser.Connections.Find(u => u.UserName == Model.User.UserName);

        if (isConnected == null)
        {
            <form asp-action="AddConnection" asp-route-id="@Model.User.UserName">
                <button type="submit" class="btn btn-primary">Add to Connections</button>
            </form>
        }
        else
        {
            <form asp-action="RemoveConnection" asp-route-id="@Model.User.UserName">
                <button type="submit" class="btn btn-primary">Remove from Connections</button>
            </form>
        }

        <div>
            <h4>Rate this user:</h4>
            <form asp-action="RateUser" asp-route-id="@Model.User.UserName" method="post">
                <input type="number" name="rating" min="0" max="10" step="1" />
                <button type="submit">Rate</button>
            </form>
        </div>
    }
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
