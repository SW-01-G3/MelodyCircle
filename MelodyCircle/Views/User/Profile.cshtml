@model MelodyCircle.ViewModels.ProfileViewModel
@using MelodyCircle.ExtensionMethods
@using Microsoft.AspNetCore.Identity
@using MelodyCircle.Data
@inject UserManager<User> UserManager
@inject ApplicationDbContext Context



@{
    ViewData["Title"] = "Profile";
}

<div class=" text-center border-purple bg-white p-5 mx-auto w-50  row d-flex justify-content-center align-items-center">

    <div class="col-sm-4 justify-content-center align-items-center ">

        <!-- Foto de Perfil -->
        @*@Html.DisplayFor(model => model.User.ProfilePicture)*@

        @if (Model.User.ProfilePicture != null && Model.User.ProfilePicture.Length > 0)
        {
            <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.User.ProfilePicture))"
                 alt="Profile Picture" class="profile-picture foto rounded " />
            
        }

        @if (User.Identity.IsAuthenticated && Model.User.UserName == User.Identity.Name)
        {
            <div class="custom-file">

                <img src="~/img/mudar_foto.svg" alt="Add Foto" class="icon" onclick="openModal()">

                <div id="confirmModal" class="modal" tabindex="-1" role="dialog">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Alteração da Foto de Perfil</h5>
                                <button type="button" class="close border-0 bg-white" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <img id="previewImage" src="caminho/para/foto/antiga.jpg" style="max-width: 100%; max-height: 300px;">
                            </div>
                            <div class="modal-footer">
                                <form asp-action="PutProfilePicture" asp-route-id="@Model.User.UserName" method="post" enctype="multipart/form-data">
                                    <input type="file" accept="image/jpeg" onchange="previewImage()">
                                    <button type="submit" class="btn bg-purple text-white border-darkPurple">Upload</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <script>
                function openModal() {
                    $('#confirmModal').modal('show');
                }

                function closeModal() {
                    $('#confirmModal').modal('hide');
                }

                function previewImage() {
                    var preview = document.getElementById('previewImage');
                    var file = document.getElementById('profilePicture').files[0];
                    var reader = new FileReader();

                    reader.onloadend = function () {
                        preview.src = reader.result;
                    }

                    if (file) {
                        reader.readAsDataURL(file);
                    } else {
                        preview.src = "caminho/para/foto/antiga.jpg"; // Defina o caminho para a foto antiga aqui
                    }
                }
            </script>

            }

        <h6>Rating: @Model.User.Ratings.CalculateAverageRating()</h6>
        

    </div>

    <div class="col-sm-4 ">
                <!-- Nome de Utilizador e Nome -->
                <h1>@Html.DisplayFor(model => model.User.UserName)</h1>
                <h5>@Html.DisplayFor(model => model.User.Name)</h5>
    </div>

    <div class="col-sm-4 ">
                <!-- Data de Nascimento, género e cargos -->
                <h6>@Html.DisplayFor(model => model.User.BirthDate)</h6>
                <h6>@Html.DisplayFor(model => model.User.Gender)</h6>
                <h6>@Html.DisplayFor(model => model.Roles)</h6>
    </div>

    @if (User.Identity.IsAuthenticated && Model.User.UserName != User.Identity.Name)
    {
        <div class="col-sm-3">
            @{
                var currentUser = await UserManager.GetUserAsync(User);
                await Context.Entry(currentUser).Collection(u => u.Connections).LoadAsync();
                var isConnected = currentUser.Connections.Find(u => u.UserName == Model.User.UserName);

                if (isConnected == null)
                {
                    <form asp-action="AddConnection" asp-route-id="@Model.User.UserName">
                        <button class="border-purple bg-purple" type="submit"> <img src="~/img/add_conexao.svg" /> </button>
                    </form>
                }
                else
                {
                    <form asp-action="RemoveConnection" asp-route-id="@Model.User.UserName">
                        <button class="border-purple bg-white " type="submit"> <img src="~/img/remove_conexao.svg" /> </button>
                    </form>
                }
            }
        </div>
    }
</div>


<div>
    <h4>Rate this user:</h4>
    <form asp-action="RateUser" asp-route-id="@Model.User.UserName" method="post">
        <input type="number" name="rating" min="0" max="10" step="1" />
        <button type="submit">Rate</button>
    </form>
</div>

@*<div>
    <a asp-action="Index">Back to List</a>
</div>*@


