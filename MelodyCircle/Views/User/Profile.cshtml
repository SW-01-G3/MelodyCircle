@model MelodyCircle.ViewModels.ProfileViewModel
@using MelodyCircle.ExtensionMethods
@using Microsoft.AspNetCore.Identity
@using MelodyCircle.Data
@inject UserManager<User> UserManager
@inject ApplicationDbContext Context

@{
    ViewData["Title"] = "Profile";
}

<div class=" text-center border-purple bg-white p-5 mx-auto w-50  row d-flex justify-content-center align-items-center">

    <div class="col-sm-3 justify-content-center align-items-center ">

        <!-- Foto de Perfil -->
        @*@Html.DisplayFor(model => model.User.ProfilePicture)*@

        @if (Model.User.ProfilePicture != null && Model.User.ProfilePicture.Length > 0)
        {
            <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.User.ProfilePicture))"
                 alt="Profile Picture" class="profile-picture foto rounded " />
            
        }

        @if (User.Identity.IsAuthenticated && Model.User.UserName == User.Identity.Name)
        {


            <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#exampleModal">
                <img src="~/img/mudar_foto.svg" />
            </button>

            <!-- Modal -->
            <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Alteração da Foto de Perfil</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">

                            <img id="previewImage" src="#" alt="Preview" style="max-width: 100%; max-height: 300px;">
                            
                            

                        </div>
                        <div class="modal-footer">
                            <form asp-action="PutProfilePicture" asp-route-id="@Model.User.UserName" method="post" enctype="multipart/form-data">

                                <input type="file" class="form-control-file" id="profilePicture" name="profilePicture" accept="image/jpeg" onchange="previewImage() ">
                                <button type="submit" class="btn bg-purple text-white border-darkPurple">Upload</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>


            
        }
        <h6>Rating: @Model.User.Ratings.CalculateAverageRating()</h6>
        

    </div>

    <div class="col-sm-4 ">
                <!-- Nome de Utilizador e Nome -->
                <h1>@Html.DisplayFor(model => model.User.UserName)</h1>
                <h5>@Html.DisplayFor(model => model.User.Name)</h5>
    </div>

    <div class="col-sm-4 ">
                <!-- Data de Nascimento, género e cargos -->
                <h6>@Html.DisplayFor(model => model.User.BirthDate)</h6>
                <h6>@Html.DisplayFor(model => model.User.Gender)</h6>
                <h6>@Html.DisplayFor(model => model.Roles)</h6>
    </div>

    @if (User.Identity.IsAuthenticated && Model.User.UserName != User.Identity.Name)
    {
        <div class="col-sm-4">
            @{
                var currentUser = await UserManager.GetUserAsync(User);
                await Context.Entry(currentUser).Collection(u => u.Connections).LoadAsync();
                var isConnected = currentUser.Connections.Find(u => u.UserName == Model.User.UserName);

                if (isConnected == null)
                {
                    <form asp-action="AddConnection" asp-route-id="@Model.User.UserName">
                        <button class="border-purple bg-purple" type="submit"> <img src="~/img/add_conexao.svg" /> </button>
                    </form>
                }
                else
                {
                    <button type="button" class="border-purple bg-white " data-bs-toggle="modal" data-bs-target="#removeConnectionModal">
                        <img src="~/img/remove_conexao.svg" />
                    </button>
                    <!-- Modal para remover música -->
                    <div class="modal fade" id="removeConnectionModal" tabindex="-1" aria-labelledby="removeConnectionModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="removeConnectionModalLabel">Pretende remover esta conexão?</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <!-- Formulário para remover música -->
                                    <form id="removeConnectionForm" asp-action="RemoveConnection" asp-route-id="@Model.User.UserName">
                                        <div class="mb-3">
                                            <button type="submit" class="btn bg-purple text-white border-darkPurple">Remover</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>

                }
            }
        </div>
    }
</div>

@if (User.Identity.IsAuthenticated && Model.User.UserName != User.Identity.Name)
        {
<div>
    <h4>Rate this user:</h4>
    <form asp-action="RateUser" asp-route-id="@Model.User.UserName" method="post">
        <input type="number" name="rating" min="0" max="10" step="1" />
        <button type="submit">Rate</button>
    </form>
</div>
}


@*ADICIONAR MUSICA*@
@if (User.Identity.IsAuthenticated && Model.User.UserName == User.Identity.Name)
{
    <!-- Modal para adicionar música -->
    <div class="modal fade" id="addMusicModal" tabindex="-1" aria-labelledby="addMusicModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addMusicModalLabel">Adicionar Música</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center bg-white justify-content-center align-items-center">

                    <!-- Formulário para adicionar música -->
                    <form id="addMusicForm" asp-action="AddMusicCard" asp-route-id="@Model.User.UserName" method="post" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="musicUri" class="form-label">Insira URI da Música</label>
                            <input type="text" class="form-control" id="musicUri" name="musicUri" placeholder="https://open.spotify.com/track/">

                            <button type="submit" class=" mt-3 btn bg-purple text-white border-darkPurple p-auto" onclick="addMusic()">Adicionar</button>
                            <!--<span asp-validation-for="musicUri" class="text-danger"></span>-->
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}



        @if (User.Identity.IsAuthenticated && Model.User.UserName == User.Identity.Name)
        {
            <div class="text-end">
                <button type="button" class="btn btn-sm bg-darkPurple text-white rounded-circle floating-button-left" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-html="true"
                        title="<p>Pefil de utilizador. Se pretender pode alterar a foto de perfil ao clicar no botão de alteração. Pode ainda adicionar, editar e remover músicas do Spotify.</p>">
                    ?
                </button>
            </div>
        }
@await Component.InvokeAsync("MusicList", Model.User.MusicURI)

<a class="btn bg-purple text-white rounded-circle floating-button" href="/Tutorial/Create" data-bs-toggle="modal" data-bs-target="#addMusicModal">+</a>


