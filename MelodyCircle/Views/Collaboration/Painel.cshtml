@using Microsoft.AspNetCore.Antiforgery
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@inject IAntiforgery Antiforgery

@model ArrangementPanelViewModel

@{
    ViewBag.Title = "Painel de Arranjo";

    var user = await UserManager.GetUserAsync(User);
    var userId = user?.Id;
    var assignedTrack = Model.Tracks.FirstOrDefault(t => t.AssignedUserId.ToString() == userId);
    var assignedTrackNumber = assignedTrack != null ? Model.Tracks.IndexOf(assignedTrack) + 1 : 0;
    var userHasTrack = assignedTrackNumber > 0;
    var antiforgeryTokenSet = Antiforgery.GetAndStoreTokens(Context);
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-2">
            <!-- Menu Lateral de Instrumentos -->
            <div id="instrument-menu">
                <h3>INSTRUMENTOS</h3>
                @foreach (var instrument in Model.AvailableInstruments)
                {
                    <div id="@instrument.Name" class="instrument" draggable="true" ondragstart="drag(event)" data-instrument="@instrument.Name">
                        @instrument.Name
                    </div>
                }
                <!-- Botão de Upload de Instrumento -->
                <button id="upload-button">UPLOAD</button>
            </div>
        </div>
        <div class="col-md-10">
            <!-- Painel de Arranjo -->
            <div id="arrangement-panel">
                <div class="header">
                    <span>BPM: <input type="number" id="bpm" value="102" min="60" max="150" /></span>
                    <span class="time-limit">4:00</span>
                    @if (userHasTrack)
                    {
                        <span>Sua faixa: @assignedTrackNumber</span>
                    }
                    else
                    {
                        <span>Você não tem faixa atribuída.</span>
                    }
                </div>
                <!-- As faixas serão carregadas aqui -->
                @foreach (var track in Model.Tracks)
                {
                    <div class="track" data-track-id="@track.Id" style="height: 100px; margin-bottom: 5px;">
                        <!-- Apenas faixas designadas para o usuário são droppables -->
                        @if (track.AssignedUserId.ToString() == userId)
                        {
                            <div class="drop-area" ondragover="allowDrop(event)" ondrop="drop(event)"></div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<form id="antiforgery-form" method="post" style="display:none;">
    <input type="hidden" name="__RequestVerificationToken" value="@antiforgeryTokenSet.RequestToken" />
</form>

@section Scripts {
    <script>
        function allowDrop(event) {
            event.preventDefault();
        }

        function drag(event) {
            event.dataTransfer.setData("text", event.target.id);
            event.target.style.opacity = '0.5';
        }

        function drop(event) {
            event.preventDefault();

            var instrumentName = event.dataTransfer.getData("text");

            // Verifique se o target é a área correta para soltar e obtenha o trackId
            var trackContainer = event.target.closest('.track');
            var trackId = trackContainer ? trackContainer.getAttribute('data-track-id') : null;

            if (trackId) {
                console.log("Instrument dropped:", instrumentName, "on track ID:", trackId);
                updateTrack(trackId, instrumentName);
            } else
                console.error("Drop target is not a track container or trackId is null");
        }

        function updateTrack(trackId, instrumentName) {
            var token = '@antiforgeryTokenSet.RequestToken';
            var url = '@Url.Action("AddInstrumentToTrack", "Collaboration")';

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify({ trackId: trackId, instrumentName: instrumentName })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success)
                        console.log('Instrument added successfully:', data.instrumentId);
                    else
                        console.error('Error adding instrument:', data.message);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        document.querySelectorAll('.instrument').forEach(item => {
            item.addEventListener('click', event => {
                let soundId = `sound-${item.getAttribute('data-instrument')}`;
                let sound = document.getElementById(soundId);
                sound.play();
            });
        });
    </script>
}