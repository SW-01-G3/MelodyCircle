@using MelodyCircle.Data
@model IEnumerable<MelodyCircle.Models.Step>
@inject ApplicationDbContext Context
@{
    ViewData["Title"] = "Titulo do tutorial";
}


@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/quill@2.0.0-rc.2/dist/quill.js"></script>
    <script>
        let stepDivs = document.getElementsByName("stepDiv");
        let stepData = [];

        @if (Model != null && Model.Any())
        {
            @foreach (var step in Model)
            {
                @:stepData.push(@Html.Raw(step.Content));
            }
        }
        var quill = new Quill('#editor');

        for (let cnt = 0; cnt < stepData.length; cnt++) {
            stepDivs[cnt].innerHTML = convertToHtml(quill, stepData[cnt]);
        }

        function convertToHtml(editor, contents) {
            editor.setContents(contents);
            return editor.root.innerHTML;
        }
    </script>

    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.0-rc.2/dist/quill.snow.css" rel="stylesheet" />
}

<div class="row justify-content-around">
    <aside class="col-md-2 h-100 bg-white rounded-3 border-purple">
        @if (Model != null && Model.Any())
        {
            @foreach (var step in Model)
            {

                <p>O utilizador tem @Context.SubscribeTutorials.FirstOrDefault().CompletedSteps.Count() passos completos neste tutorial.</p>

	            <div class="col justify-content-evenly mt-3">
                    <form method="post"  asp-action="CompleteStep" asp-route-tutorialId="@step.TutorialId" asp-route-stepId="@step.Id">
			            <button type="submit">
							Check
			            </button>
		            </form>
		            <span>@Html.DisplayFor(modelItem => step.Title)</span>
		            <a asp-action="Edit" asp-route-id="@step.Id"><img src="~/img/edit.svg" alt="Edit step." class="icon fill-purple"/></a>
		            <a asp-action="Delete" asp-route-id="@step.Id"><img src="~/img/delete.svg" alt="Delete step." class="icon"/></a>
	            </div>

            }
        } else
        {
            <p class="mt-3">Ainda não foi adicionado conteudo.</p>
        }
        @if (User.Identity.IsAuthenticated)
        {
            @if (User.Identity.Name == ViewBag.Creator)
            {
                <div class="d-flex justify-content-center my-3">
                    <a asp-action="Create" class="btn bg-purple text-white rounded-circle addStepbutton" asp-route-tutorialId="@ViewBag.TutorialId">+</a>
                </div>
                
            }
        }
    </aside>
    <div class="col-md-8">
        <div class="row d-flex justify-content-center">
            <h2 class="align-self-center">@ViewData["Title"]</h2>
            <h3 class="align-self-center">@ViewBag.Creator</h3>
        </div>
        
        @if (Model != null && Model.Any())
        {
            @foreach (var step in Model)
            {
                <div class="my-3">
                    <div class="d-flex justify-content-center">
                        <h4>@Html.DisplayFor(modelItem => step.Title)</h4>
                    </div>
                    
                    <section id="stepDiv" name="stepDiv" class="border-purple bg-white rounded-3 py-2 px-1"></section>
                </div>

            }
        }
    </div>

    <input type="hidden" id="editor" name="editor" value="" />
</div>





<div class="text-end">
    <button type="button" class="btn btn-sm bg-darkPurple text-white rounded-circle floating-button-left" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-html="true"
            title="<p>Nesta página pode visualizar todos os passos do tutorial. Caso seja instrutor, poderá adicionar passos, editar ou remover.</p>">
        ?
    </button>

    <a asp-action="Index" asp-controller="Tutorial">Voltar à lista de Tutoriais</a>
</div>